version: 2.1
jobs:
  build:
    docker:
      - image: docker:20.10.6-git
    steps:
      - checkout
      - setup_remote_docker
      #     - setup_remote_docker:
      #         docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip
            pip install docker-compose==1.22.0
            mkdir -p /artifacts
      - run:
          name: Build
          command: |
            VERSION=$(awk '/version/{gsub(/("|",)/,"",$2);print $2};' package.json)
            IMAGE_VERSION="${VERSION}-${CIRCLE_BUILD_NUM}"
            docker build --cache-from=docker -t pagespeedinsights-collector:${IMAGE_VERSION} .
      - run:
          name: Tests
          command: |
            VERSION=$(awk '/version/{gsub(/("|",)/,"",$2);print $2};' package.json)
            IMAGE_VERSION="${VERSION}-${CIRCLE_BUILD_NUM}"
            docker run pagespeedinsights-collector:${IMAGE_VERSION} npm run test:code
      - run:
          name: Report npm deps
          command: |
            VERSION=$(awk '/version/{gsub(/("|",)/,"",$2);print $2};' package.json)
            IMAGE_VERSION="${VERSION}-${CIRCLE_BUILD_NUM}"
            docker run pagespeedinsights-collector:${IMAGE_VERSION} npm outdated 2>&1 | tee /artifacts/npm-outdated.txt || true
      - run:
          name: Install trivy
          command: |
            apk add --update curl
            TRIVY_VERSION=$(
                curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | \
                grep '"tag_name":' | \
                sed -E 's/.*"v([^"]+)".*/\1/'
            )
            wget https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
            tar zxvf trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz trivy
            mv trivy /usr/local/bin
      - run:
          name: Scan the local image with trivy
          command: |
            VERSION=$(awk '/version/{gsub(/("|",)/,"",$2);print $2};' package.json)
            IMAGE_VERSION="${VERSION}-${CIRCLE_BUILD_NUM}"
            trivy image --exit-code 0 --no-progress pagespeedinsights-collector:${IMAGE_VERSION} | tee /artifacts/trivy-all.txt
            trivy image --exit-code 0 --no-progress --ignore-unfixed pagespeedinsights-collector:${IMAGE_VERSION} | tee /artifacts/trivy-fixable.txt
      - run:
          name: Scan repo for secrets
          command: |
            trivy fs . | tee /artifacts/trivy-secrets.txt
      - run:
          name: Push Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              VERSION=$(awk '/version/{gsub(/("|",)/,"",$2);print $2};' package.json)
              IMAGE_VERSION="${VERSION}-${CIRCLE_BUILD_NUM}"
              # GitHub Package Repo
              echo ${DOCKER_PASSWORD} | docker login ${DOCKER_REGISTRY} -u ${DOCKER_USERNAME} --password-stdin
              docker tag pagespeedinsights-collector:${IMAGE_VERSION} ${DOCKER_REGISTRY}/${DOCKER_REGISTRY_SPACE}/pagespeedinsights-collector:${IMAGE_VERSION}
              docker push ${DOCKER_REGISTRY}/${DOCKER_REGISTRY_SPACE}/pagespeedinsights-collector:${IMAGE_VERSION}
              # Docker Hub
              echo ${DOCKER_PASSWORD2} | docker login -u ${DOCKER_USERNAME2} --password-stdin
              docker tag pagespeedinsights-collector:${IMAGE_VERSION} ${DOCKER_REGISTRY_SPACE2}/pagespeedinsights-collector:${IMAGE_VERSION}
              docker push ${DOCKER_REGISTRY_SPACE2}/pagespeedinsights-collector:${IMAGE_VERSION}
            fi
      - store_artifacts:
          path: /artifacts

  analyse-deps:
    docker:
      - image: ubuntu:20.04
    steps:
      - run: DEBIAN_FRONTEND="noninteractive" apt update && apt install -y git
      - checkout
      - run: mkdir -p /artifacts
      - run:
          name: licensed (https://github.com/github/licensed)
          command: |
            DEBIAN_FRONTEND="noninteractive" TZ="Europe/London" apt install -y cmake pkg-config curl npm
            npm install
            curl -sSL https://github.com/github/licensed/releases/download/3.0.1/licensed-3.0.1-linux-x64.tar.gz > licensed.tar.gz
            tar -xzf licensed.tar.gz
            rm -f licensed.tar.gz
            ./licensed env
            ./licensed list | tee /artifacts/deps-list.txt
            ./licensed cache
            ./licensed status | tee /artifacts/deps-check.txt
      - store_artifacts:
          path: /artifacts

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - analyse-deps
